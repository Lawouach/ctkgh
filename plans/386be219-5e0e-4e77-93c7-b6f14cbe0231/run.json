{
  "chaoslib-version": "1.33.1",
  "platform": "Linux-5.15.0-1031-azure-x86_64-with-glibc2.35",
  "node": "fv-az574-886",
  "experiment": {
    "title": "SLO error-count-3h / Error budget 5%",
    "method": [],
    "runtime": {
      "hypothesis": {
        "strategy": "after-method-only"
      }
    },
    "version": "1.0.0",
    "controls": [
      {
        "name": "reliably",
        "provider": {
          "type": "python",
          "module": "chaosreliably.controls.experiment",
          "arguments": {
            "exp_id": "11c4ee0f-16ef-44e5-826e-e2644bf4d426",
            "org_id": "8f67bb6a-4944-40af-80b0-921023467cdc"
          }
        }
      }
    ],
    "description": "Monitor the health of our demo service from our users perspective and ensure they have a high-quality experience",
    "contributions": {
      "quality": "low",
      "security": "none",
      "performance": "medium",
      "availability": "high"
    },
    "steady-state-hypothesis": {
      "title": "Compute SLO and validate its Error Budget with our target",
      "probes": []
    },
    "dry": null,
    "extensions": [
      {
        "name": "reliably",
        "pauses": [],
        "termination": null,
        "execution_url": "https://app.reliably.dev/executions/view/?id=ffc48890-cc17-4315-8d4e-bed3e78c5206&exp=11c4ee0f-16ef-44e5-826e-e2644bf4d426",
        "extra": [
          {
            "type": "url",
            "provider": "github",
            "topic": "commit",
            "value": "https://github.com/Lawouach/ctkgh/tree/main/plans/386be219-5e0e-4e77-93c7-b6f14cbe0231"
          },
          {
            "type": "url",
            "provider": "github",
            "topic": "repo",
            "value": "https://github.com/Lawouach/ctkgh"
          },
          {
            "type": "url",
            "provider": "github",
            "topic": "run",
            "value": "https://github.com/Lawouach/ctkgh/actions/runs/4124321917"
          }
        ]
      }
    ]
  },
  "start": "2023-02-08T12:57:31.016088",
  "status": "failed",
  "deviated": true,
  "steady_states": {
    "before": null,
    "after": {
      "steady_state_met": false,
      "probes": [
        {
          "activity": {
            "name": "get-slo",
            "type": "probe",
            "provider": {
              "func": "compute_slo",
              "type": "python",
              "module": "chaosreliably.activities.slo.probes",
              "arguments": {
                "slo": {
                  "kind": "ServiceLevelObjective",
                  "spec": {
                    "goal": 0.95,
                    "method": "good_bad_ratio",
                    "backend": "cloud_monitoring_mql",
                    "exporters": [],
                    "description": "Availability of Cloud Run service",
                    "service_level_indicator": {
                      "filter_good": "fetch cloud_run_revision | metric 'run.googleapis.com/request_count' | filter resource.project_id == '${CLOUDRUN_PROJECT_ID}' | filter resource.service_name == '${CLOUDRUN_SERVICE_NAME}' | filter metric.response_code_class == '2xx'",
                      "filter_valid": "fetch cloud_run_revision | metric 'run.googleapis.com/request_count' | filter resource.project_id == '${CLOUDRUN_PROJECT_ID}' | filter resource.service_name == '${CLOUDRUN_SERVICE_NAME}'"
                    }
                  },
                  "metadata": {
                    "name": "cloudrun-service-availability",
                    "labels": {
                      "slo_name": "availability",
                      "feature_name": "service",
                      "service_name": "cloudrun"
                    }
                  },
                  "apiVersion": "sre.google.com/v2"
                },
                "config": {
                  "backends": {
                    "cloud_monitoring_mql": {
                      "project_id": "${STACKDRIVER_HOST_PROJECT_ID}"
                    }
                  },
                  "error_budget_policies": {
                    "default": {
                      "steps": [
                        {
                          "name": "3 hours",
                          "alert": false,
                          "window": 10800,
                          "message_ok": "Last 3 hours on track",
                          "message_alert": "Page the SRE team to defend the SLO",
                          "burn_rate_threshold": 9
                        }
                      ]
                    }
                  }
                }
              }
            },
            "tolerance": {
              "name": "there-should-be-error-budget-left",
              "type": "probe",
              "provider": {
                "func": "has_error_budget_left",
                "type": "python",
                "module": "chaosreliably.activities.slo.tolerances",
                "arguments": {
                  "name": "cloudrun-service-availability"
                }
              }
            },
            "_id": "7b166ebfd196"
          },
          "output": null,
          "start": "2023-02-08T12:57:33.070104",
          "status": "failed",
          "exception": [
            "Traceback (most recent call last):\n",
            "  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/chaosreliably/activities/slo/probes.py\", line 67, in replace_vars\n    full_value = full_value.replace(f\"${{{var}}}\", ctx[var])\n",
            "  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/os.py\", line 680, in __getitem__\n    raise KeyError(key) from None\n",
            "KeyError: 'CLOUDRUN_PROJECT_ID'\n",
            "\nDuring handling of the above exception, another exception occurred:\n\n",
            "Traceback (most recent call last):\n",
            "  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/chaoslib/provider/python.py\", line 56, in run_python_activity\n    return func(**arguments)\n",
            "  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/chaosreliably/activities/slo/probes.py\", line 31, in compute_slo\n    s_config = replace_vars(slo)\n",
            "  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/chaosreliably/activities/slo/probes.py\", line 69, in replace_vars\n    raise ActivityFailed(\n",
            "chaoslib.exceptions.ActivityFailed: Environment variable \"CLOUDRUN_PROJECT_ID\" should be set.\n",
            "\nDuring handling of the above exception, another exception occurred:\n\n",
            "chaoslib.exceptions.ActivityFailed: chaoslib.exceptions.ActivityFailed: Environment variable \"CLOUDRUN_PROJECT_ID\" should be set.\n"
          ],
          "end": "2023-02-08T12:57:33.515184",
          "duration": 0.44508,
          "tolerance_met": false
        }
      ]
    },
    "during": []
  },
  "run": [],
  "rollbacks": [],
  "end": "2023-02-08T12:57:34.751866",
  "duration": 3.7376978397369385
}