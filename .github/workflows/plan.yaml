name: Execute a Reliably Plan

on:
  workflow_dispatch:
    inputs:
      experiment-url:
        description: The full URL to a Reliably experiment
        required: true
      plan-id:
        description: The identifier of the plan which triggered this workflow
        required: true
      environment-name:
        description: The name of the environment to pass secrets
        required: false
      reliably-host:
        description: Reliably's host domain
        required: false
        default: app.reliably.dev

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-experiment:
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment-name }}
    steps:
    - uses: actions/checkout@v3
    - uses: reliablyhq/actions/plan@main
    - name: Create directory to hold the results
      run: |
        NOW=$(date --utc --iso-8601=seconds)
        mkdir -p ./plans/${{ inputs.plan-id }}/${NOW}
        echo "basedir=./plans/${{ inputs.plan-id }}/${NOW}"" >> $GITHUB_ENV
        URL=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/blob/${GITHUB_REF}/plans/${{ inputs.plan-id }}/${UTCNOW}
        echo 'RELIABLY_EXECUTION_EXTRA=[{"type": "url", "provider": "github", "value": "${URL}"}]' >> $GITHUB_ENV
    - name: Execute Reliably Experiment
      working-directory: ./plans/${{ inputs.plan-id }}
      run: chaos run --rollback-strategy=always ${{ inputs.experiment-url }}
      env:
        CHAOSTOOLKIT_LOADER_AUTH_BEARER_TOKEN: ${{ secrets.RELIABLY_AGENT_TOKEN }}
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        RELIABLY_HOST: ${{ inputs.reliably-host }}
        RELIABLY_TOKEN: ${{ secrets.RELIABLY_AGENT_TOKEN }}
    - name: Store results
      working-directory: ./plans/${{ inputs.plan-id }}
      run: |
        export EXECUTION_URL=$(cat journal.json | jq -r '.experiment.extensions[] | select(.name=="reliably") | .execution_url')

        mv chaostoolkit.log ${{ env.basedir }}/chaostoolkit.log
        mv journal.json ${{ env.basedir }}/journal.json

        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git add ${{ env.basedir }}
        git commit -s -m "Plan ${{ inputs.plan-id }}" -m "Visit ${EXECUTION_URL}"
        git pull --rebase origin main
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ACTOR: ${{ github.actor }}
